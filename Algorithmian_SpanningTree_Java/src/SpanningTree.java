/**
 * Created by dongdor on 2016. 8. 20..
 */

/**
 신장트리(Spanning Tree)
 그래프 내에서 모든 정점을 포함하는 트리이다
 그래프 내의 모든 정점을 포함하고 있어야하고, 사이클을 포함하고 있으면 안된다
 ->사이클이란 출발점과 도착점이 같으면서 중복되는 길이 없는 경로를 말한다

 최소비용신장트리(MST : Minimum Spanning Tree)는 모든 정점들을 가장 적은 수의 간선과 비용으로 연결하는 신장 트리이다
 간선에는 가중치값이 있고 각 간선이 가지고 있는 weight값이 최소가 되는 신장트리이다.

 이러한 MST를 구하는 알고리즘은 Kruskal 알고리즘  Prim알고리즘이 있다


 Kruskal 알고리즘

 알고리즘 순서
 1) 그래프 내의 모든 간선을 가중치의 오름차순 목록으로 만든다. 그러기 위해서는 일반적으로 모든 간선을
 우선 순위 큐에 Enqueue해서 정렬을 한다

 2) 우선순위 큐에서 하나씩 Dequeue하면서 간선을 최소신장트리에 추가시킨다. 이 때 사이클이 발생하는지 검사하고
 사이클이 발생된다면 추가하지 않는다

 2-1) 사이클을 검사할때는 A-B를 연결하는 간선이라면 A와 B의 집합을 확인하고 같은 집합이면 사이클이고 아니라면 사이클이 발생되지 않는다

 3) 간선을 정점의 개수 -1 일때까지 2)를 반복한다


 Prim 알고리즘

 알고리즘 순서
 1) 시작정점이 신장트리집합에 포함

 2) 앞에서 만들어진 신장트리집합에 인접한 정점들 중 최저 가중치를 가진 간선을 선택하여 트리를 확장한다

 3) 이 과정을 트리의 간선이 정정의 개수 -1 일때까지 2)를 반복한다
 */
public class SpanningTree {


}
